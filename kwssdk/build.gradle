apply plugin: 'com.novoda.bintray-release'//has to be BEFORE 'com.android.library'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.novoda:bintray-release:0.8.0'
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 1
        versionName "2.4.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    maven { url  "http://dl.bintray.com/gabrielcoman/maven" }
    mavenCentral()
}

dependencies {
    // SuperAwesome base library
    api 'tv.superawesome.samobilebase:samobilebase:2.1.5'

    // SuperAwesome Protobufs
    api 'tv.superawesome.protobufs:protobufs:1.5.7'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // tests
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.18.3"
    testImplementation "eu.codearte.catch-exception:catch-exception:1.4.4"
    testImplementation "org.assertj:assertj-core:3.8.0"
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.9.1'
    testImplementation files('libs/json.jar')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Set this dependency if you want to use Hamcrest matching
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
}

publish {

    /**
     * Code meant to be refactored in a plugin. DO NOT MODIFY HERE.
     */
    def versionName = System.properties.getProperty("versionName", "")
    def groupProj = System.properties.getProperty("groupProj", "")
    def artifactProj = System.properties.getProperty("artifactProj", "")

    userOrg = System.properties.getProperty("userOrg", "")
    groupId = groupProj
    artifactId = artifactProj
    publishVersion = versionName
    website = System.properties.getProperty("webURL", "")
    repoName = System.properties.getProperty("repoName", "")
    uploadName = System.properties.getProperty("uploadName", "")

    publishing {
        publications {
            SAPublication(MavenPublication) {
                groupId groupProj
                artifactId artifactProj
                version versionName

                artifact bundleRelease

            }
        }
    }
    publications = ['SAPublication']
}